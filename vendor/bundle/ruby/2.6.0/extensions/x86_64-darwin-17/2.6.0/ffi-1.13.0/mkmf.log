"pkg-config --exists libffi"
| pkg-config --libs libffi
=> "-lffi\n"
" clang -o conftest -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/x86_64-darwin17 -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/ruby/backward -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0 -I. -I/Users/yukipetz/.rbenv/versions/2.6.0/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -fno-common -pipe conftest.c  -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib  -fstack-protector-strong -L/usr/local/lib     -lruby.2.6   "
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return 0;
6: }
/* end */

" clang -o conftest -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/x86_64-darwin17 -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/ruby/backward -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0 -I. -I/Users/yukipetz/.rbenv/versions/2.6.0/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -fno-common -pipe conftest.c  -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib  -fstack-protector-strong -L/usr/local/lib     -lruby.2.6 -lffi  "
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return 0;
6: }
/* end */

| pkg-config --cflags-only-I libffi
=> "-I/usr/include/ffi\n"
| pkg-config --cflags-only-other libffi
=> "\n"
| pkg-config --libs-only-l libffi
=> "-lffi\n"
package configuration for libffi
cflags: 
ldflags: 
libs: -lffi

have_library: checking for ffi_call() in -lffi... -------------------- yes

" clang -o conftest -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/x86_64-darwin17 -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/ruby/backward -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0 -I. -I/usr/include/ffi -I/Users/yukipetz/.rbenv/versions/2.6.0/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -fno-common -pipe  conftest.c  -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib  -fstack-protector-strong -L/usr/local/lib      -lffi -lruby.2.6 -lffi  -lffi  "
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <ffi.h>
 4: 
 5: /*top*/
 6: extern int t(void);
 7: int main(int argc, char **argv)
 8: {
 9:   if (argc > 1000000) {
10:     int (* volatile tp)(void)=(int (*)(void))&t;
11:     printf("%d", (*tp)());
12:   }
13: 
14:   return 0;
15: }
16: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_call; return !p; }
/* end */

--------------------

have_func: checking for ffi_closure_alloc()... -------------------- no

" clang -o conftest -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/x86_64-darwin17 -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/ruby/backward -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0 -I. -I/usr/include/ffi -I/Users/yukipetz/.rbenv/versions/2.6.0/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -fno-common -pipe  conftest.c  -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib  -fstack-protector-strong -L/usr/local/lib     -lffi  -lffi -lruby.2.6 -lffi  -lffi  "
conftest.c:14:57: error: use of undeclared identifier 'ffi_closure_alloc'
int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_closure_alloc; return !p; }
                                                        ^
1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))ffi_closure_alloc; return !p; }
/* end */

" clang -o conftest -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/x86_64-darwin17 -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0/ruby/backward -I/Users/yukipetz/.rbenv/versions/2.6.0/include/ruby-2.6.0 -I. -I/usr/include/ffi -I/Users/yukipetz/.rbenv/versions/2.6.0/include  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT    -O3 -Wno-error=shorten-64-to-32  -fno-common -pipe  conftest.c  -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib -L. -L/Users/yukipetz/.rbenv/versions/2.6.0/lib  -fstack-protector-strong -L/usr/local/lib     -lffi  -lffi -lruby.2.6 -lffi  -lffi  "
Undefined symbols for architecture x86_64:
  "_ffi_closure_alloc", referenced from:
      _t in conftest-5d2368.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return 0;
13: }
14: extern void ffi_closure_alloc();
15: int t(void) { ffi_closure_alloc(); return 0; }
/* end */

--------------------

extconf.h is:
/* begin */
1: #ifndef EXTCONF_H
2: #define EXTCONF_H
3: #define HAVE_FFI_PREP_CIF_VAR 1
4: #define USE_INTERNAL_LIBFFI 1
5: #endif
/* end */

